/*
 * File: app/store/ColumnStore.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Code.store.ColumnStore', {
    extend: 'Ext.data.Store',

    requires: [
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json',
        'Ext.data.field.Field'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'ColumnStore',
            proxy: {
                type: 'ajax',
                url: 'http://localhost:10001/field/loadByModelId',
                reader: {
                    type: 'json'
                }
            },
            fields: [
                {
                    name: 'isPk'
                },
                {
                    name: 'columnName'
                },
                {
                    name: 'DATA_TYPE'
                },
                {
                    name: 'nullable'
                },
                {
                    name: 'autoincrement'
                },
                {
                    name: 'length'
                },
                {
                    name: 'comment',
                    validators: [
                        {
                            type: 'length',
                            field: 'COMMENTS',
                            max: 100,
                            min: 1
                        },
                        {
                            type: 'presence',
                            field: 'COMMENTS'
                        }
                    ]
                },
                {
                    name: 'type'
                },
                {
                    name: 'field'
                },
                {
                    name: 'existsMethod'
                },
                {
                    name: 'findBy'
                },
                {
                    name: 'findAllBy'
                },
                {
                    name: 'matchType'
                },
                {
                    name: 'listShow'
                },
                {
                    name: 'validate'
                },
                {
                    name: 'inputType'
                },
                {
                    name: 'id'
                }
            ]
        }, cfg)]);
    }
});